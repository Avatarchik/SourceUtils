precision mediump float;

varying vec2 vTextureCoord;
varying vec2 vLightmapCoord;
varying float vAlpha;

uniform sampler2D uBaseTexture;
uniform sampler2D uBaseTexture2;
uniform sampler2D uBlendModulateTexture;
uniform sampler2D uLightmap;

// x: near fog density, y: far plane fog density
uniform vec2 uFogParams;
uniform vec3 uFogColor;

uniform float uAlphaTest;

void main()
{
    vec3 texSample = texture2D(uBaseTexture, vTextureCoord).rgb;
    vec3 texSample2 = texture2D(uBaseTexture2, vTextureCoord).rgb;
    vec2 blendSample = texture2D(uBlendModulateTexture, vTextureCoord).rg;

    float blendMin = max(0.0, blendSample.y - blendSample.x * 0.5);
    float blendMax = min(1.0, blendSample.y + blendSample.x * 0.5);
    float blend = max(0.0, min(1.0, (vAlpha - blendMin) / max(0.0, blendMax - blendMin)));

    vec3 blendedSample = mix(texSample2, texSample, blend);

    float depth = ((2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far) / (gl_DepthRange.far - gl_DepthRange.near)) / gl_FragCoord.w;
    float fogDensity = uFogParams.x + uFogParams.y * depth;

    fogDensity = min(max(fogDensity, 0.0), 1.0);

    vec3 lightmap = texture2D(uLightmap, vLightmapCoord).rgb;
    vec3 color = mix(blendedSample * lightmap, uFogColor, fogDensity);

    gl_FragColor = vec4(color, 1);
}
