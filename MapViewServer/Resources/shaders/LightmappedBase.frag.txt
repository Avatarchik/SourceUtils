precision mediump float;

varying vec2 vTextureCoord;
varying vec2 vLightmapCoord;

uniform sampler2D uBaseTexture;
uniform sampler2D uLightmap;

// x: near fog density, y: far plane fog density, z: min density, w: max density
uniform vec4 uFogParams;
uniform vec3 uFogColor;

vec3 applyFog(vec3 inColor)
{
    float depth = ((2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far) / (gl_DepthRange.far - gl_DepthRange.near)) / gl_FragCoord.w;
    float fogDensity = uFogParams.x + uFogParams.y * depth;

    fogDensity = min(max(fogDensity, uFogParams.z), uFogParams.w);

    return mix(inColor, uFogColor, fogDensity);
}

vec3 applyLightmap(vec3 inColor) {
    const float gamma = 0.5;

    vec4 sample = texture2D(uLightmap, vLightmapCoord);
    float exp = sample.a * 255.0 - 128.0;
    vec3 color = pow(sample.rgb * pow(2.0, exp), vec3(gamma, gamma, gamma));
    return inColor * color;
}
